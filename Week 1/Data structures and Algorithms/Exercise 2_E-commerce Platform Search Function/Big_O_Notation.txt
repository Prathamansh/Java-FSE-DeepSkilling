✅ Big O Notation
Big O notation describes the upper bound of an algorithm's runtime or space requirement in terms of input size n. 
It tells us how performance scales:

O(1) – Constant time (very fast)

O(log n) – Logarithmic (binary search)

O(n) – Linear (simple loop)

O(n log n) – Efficient sorting

O(n²) – Nested loops, etc.